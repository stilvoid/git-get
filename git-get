#!/bin/bash

set -eu -o pipefail

function print_help {
    echo "Usage: git get [--print-path] [--location <dir>] <repository> [<args>]"
    echo
    echo "  git-get clones <repository> into a folder derived from the repository URL"
    echo
    echo "  For example, git get git@github.com:stilvoid/git-get.git"
    echo "  will be cloned into ~/code/github.com/stilvoid/git-get"
    echo
    echo "  You can override the default base path (~/code) with"
    echo "  git config --global get.location \"/path/to/your/code\""
    echo
    echo "  --print-path will print out the full path that the repository would be cloned into"
    echo "  and then exits immediately without cloning"
    echo
    echo "  --location <dir> override the base directory for this clone only"
    echo
    echo "  -h, --help show this help message and exit"
    echo
    echo "  Any other arguments are passed to the \"git clone\" command"
}

# Parse CLI opts
COMMAND="checkout"
REPO=""
EXTRA_ARGS=()
OVERRIDE_LOCATION=""

while [[ $# -gt 0 ]]; do
    case $1 in
        --print-path)
            COMMAND="print"
            shift
            ;;
        --location)
            if [ $# -lt 2 ] || [ -z "${2:-}" ]; then
                echo "Error: --location requires a directory path"
                exit 1
            fi
            OVERRIDE_LOCATION="$2"
            shift 2
            ;;
        -h|--help)
            print_help
            exit
            ;;
        -*)
            EXTRA_ARGS+=("$1")
            shift
            ;;
        *)
            if [ -z "$REPO" ]; then
                REPO="$1"
            else
                EXTRA_ARGS+=("$1")
            fi
            shift
            ;;
    esac
done

GIT_ARGS="${EXTRA_ARGS[*]+"${EXTRA_ARGS[*]}"}"

if [ -z "$REPO" ] ; then
    print_help
    exit 1
fi

# Set base directory for git checkout
if [ -n "$OVERRIDE_LOCATION" ]; then
    # Use override location, expanding tilde if present
    base_dir="${OVERRIDE_LOCATION/#~/$HOME}"
else
    # Use configured or default location
    base_dir="$(git config get.location || true)"
    
    if [ -z "$base_dir" ]; then
        base_dir="$HOME/code"
    else
        # Replace a tilde with $HOME
        base_dir="${base_dir/#~/$HOME}"
    fi
fi

# Strip scheme
dir="${REPO#*://}"

# Strip username
dir="${dir#*@}"

# Replace : with /
dir="${dir/://}"

# Remove .git
dir="${dir%.git}"

# Remove trailing slash from base_dir if present
base_dir="${base_dir%/}"

dir="${base_dir}/${dir}"

if [ "$COMMAND" == "print" ]; then
    echo "$dir"
    exit
fi

echo "Cloning into '$dir'..."
CMD="git clone $GIT_ARGS -- \"$REPO\" \"$dir\""

eval "$CMD"

echo "Successfully cloned to: $dir"
